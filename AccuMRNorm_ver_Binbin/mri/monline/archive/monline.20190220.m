function varargout = monline(varargin)
%MONLINE - main interface for online fMRI analysis
%  MONLINE - main GUI interface for online fMRI analysis.
%  monline.m calls monlineproc.m to process data.  Data analysis
%  will require only MRI data without dgz/adf etc.
%
%  EXAMPLE :
%    >> monline
%    >> monlineview(SIG)
%    >> monlinepvpar(SIG)
%
%  NOTE :
%    Processed data will be assigned as 'SIG' in the workspace.
%
%  VERSION :
%    0.90 01.10.06 YM  pre-release
%    0.91 14.03.08 YM  bug fix
%    0.92 14.03.08 YM  supports 'sdu','percent'.
%    0.93 10.04.08 YM  adds 'Tripilot'.
%    0.94 02.09.08 YM  supports trial selection.
%    0.95 17.05.10 YM  supports 'apply_hrf'.
%    0.96 19.05.10 YM  supports GLM.
%    0.97 21.01.11 YM  supports 'tfilter' as Hz.
%    0.98 28.09.12 YM  updated default directory.
%    0.99 11.12.13 YM  try recorvering ses-dir, supports PvPar.
%    1.00 03.11.15 YM  adds "study" for PV6.
%    1.01 17.07.18 YM  fixed problems of graphic handles (2014b).
%    1.02 20.02.19 YM  supports selection of HRFs.
%
%  See also MONLINEPROC MONLINEVIEW MONLINEPVPAR


persistent H_MONLINE;  % keep the figure handle
  

% execute callback function then return; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
if nargin > 0 && ischar(varargin{1}) && ~isempty(findstr(varargin{1},'Callback')),
  if nargout
    [varargout{1:nargout}] = feval(varargin{:});
  else
    feval(varargin{:});
  end
  return;
end


%% prevent double execution
if ishandle(H_MONLINE),
  close(H_MONLINE);
  %fprintf('\n ''mgui'' already opened.\n');
  %return;
end



% DEFAULT CONTROL SETTINGS %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
DEF.datadir   = '//wks8/mridata_wks8';
DEF.study     = 'M02.lx1';
DEF.fscan     = '7';
%DEF.datadir   = '//wks6/data';
%DEF.study     = 'D04.LG1';
%DEF.fscan     = '14';
if nargin > 0 && ischar(varargin{1}),
  switch lower(varargin{1})
   case {'4.7t','47t'}
    DEF.datadir = '//wks19/mridata';
    DEF.datadir = '//wks12/mridata_wks12';
    DEF.fscan   = '10';
   case {'7t','7'}
    DEF.datadir = '//wks4/data';
    DEF.datadir = '//wks24/data';
    DEF.fscan   = '10';
  end
end


DEF.freco     = '1';
DEF.epiana    = 1;
DEF.ascan     = '';
DEF.areco     = '1';
DEF.tscan     = '1';
DEF.treco     = '1';
DEF.aslice    = '1:13';
DEF.stmtypes  = 'stim blank';
DEF.stimtvol  = '8 8';
DEF.stimrep   = '4';
DEF.stimtrial = [];
DEF.imgnormalize = 1;
DEF.xysmooth     = 1;
DEF.centroid     = 0;
DEF.detrend      = 0;
DEF.tfilter      = 0;
DEF.xform        = 'percent';
DEF.average      = 0;
DEF.apply_hrf    = 'hemo';
DEF.corrana      = 0;
DEF.glmana       = 0;
DEF.ttest        = 1;


% try recovering session directory
if evalin('base','exist(''SIG'',''var'')'),
  SIG = evalin('base','SIG');
  if isfield(SIG,'path') && isfield(SIG,'session')
    DEF.datadir = SIG.path;
    DEF.study   = SIG.session;
  end
  if isfield(SIG,'scanreco') && numel(SIG.scanreco) == 2 && all(SIG.scanreco > 0),
    DEF.fscan = num2str(SIG.scanreco(1));
    DEF.freco = num2str(SIG.scanreco(2));
  end
  clear SIG;
end




% GET SCREEN SIZE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[scrW scrH] = subGetScreenSize('char');

figW = 60.5; figH = 30;
figX = 1;  figY = scrH-figH-6;

%[figX figY figW figH]
% CREATE A MAIN FIGURE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
hMain = figure(...
    'Name',mfilename,...
    'NumberTitle','off', 'toolbar','none','MenuBar','none',...
    'Tag','main', 'units','char', 'pos',[figX figY figW figH],...
    'HandleVisibility','on', 'Resize','on',...
    'DoubleBuffer','on', 'BackingStore','on', 'Visible','on',...
    'DefaultAxesFontSize',10,...
    'DefaultAxesFontName', 'Comic Sans MS',...
    'DefaultAxesfontweight','bold',...
    'PaperPositionMode','auto', 'PaperType','A4', 'PaperOrientation', 'landscape');


% WIDGETS %%%%%%%%%%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
XDSP = 1; H = figH - 2.0;
% Data directory
uicontrol(...
    'Parent',hMain,'Style','Text',...
    'Units','char','Position',[XDSP H-0.3 30 1.5],...
    'String','DataDir:','FontWeight','bold',...
    'HorizontalAlignment','left',...
    'Tag','DataDirTxt',...
    'BackgroundColor',get(hMain,'Color'));
uicontrol(...
    'Parent',hMain,'Style','Edit',...
    'Units','char','Position',[XDSP+11 H 47 1.5],...
    'Callback','monline(''Main_Callback'',gcbo,''set-scanreco'',guidata(gcbo))',...
    'String',DEF.datadir,'Tag','DataDirEdt',...
    'HorizontalAlignment','left',...
    'TooltipString','Set session directory',...
    'FontWeight','Bold','FontName','FixedWidth');
% Study name
uicontrol(...
    'Parent',hMain,'Style','Text',...
    'Units','char','Position',[XDSP H-2.3 30 1.5],...
    'String','Study:','FontWeight','bold',...
    'HorizontalAlignment','left',...
    'Tag','StudyTxt',...
    'BackgroundColor',get(hMain,'Color'));
uicontrol(...
    'Parent',hMain,'Style','Edit',...
    'Units','char','Position',[XDSP+11 H-2 47 1.5],...
    'Callback','monline(''Main_Callback'',gcbo,''set-scanreco'',guidata(gcbo))',...
    'String',DEF.study,'Tag','StudyEdt',...
    'HorizontalAlignment','left',...
    'TooltipString','Set Study Name',...
    'FontWeight','Bold','FontName','FixedWidth');



XDSP = 1;  H = figH - 6.0;
% Scan/Reco number
uicontrol(...
    'Parent',hMain,'Style','Text',...
    'Units','char','Position',[XDSP H-0.3 30 1.5],...
    'String','Func.','FontWeight','bold',...
    'HorizontalAlignment','left',...
    'Tag','FuncScanTxt',...
    'BackgroundColor',get(hMain,'Color'));
uicontrol(...
    'Parent',hMain,'Style','Text',...
    'Units','char','Position',[XDSP+9.5 H-0.3 30 1.5],...
    'String','Scan#:','FontWeight','bold',...
    'HorizontalAlignment','left',...
    'Tag','ScanNumTxt',...
    'BackgroundColor',get(hMain,'Color'));
uicontrol(...
    'Parent',hMain,'Style','Edit',...
    'Units','char','Position',[XDSP+18 H 9 1.5],...
    'Callback','monline(''Main_Callback'',gcbo,''set-scanreco'',guidata(gcbo))',...
    'String',DEF.fscan,'Tag','ScanNumEdt',...
    'HorizontalAlignment','left',...
    'TooltipString','Set scan number',...
    'FontWeight','Bold','FontName','FixedWidth');
uicontrol(...
    'Parent',hMain,'Style','Text',...
    'Units','char','Position',[XDSP+28 H-0.3 30 1.5],...
    'String','Reco#:','FontWeight','bold',...
    'HorizontalAlignment','left',...
    'Tag','RecoNumTxt',...
    'BackgroundColor',get(hMain,'Color'));
uicontrol(...
    'Parent',hMain,'Style','Edit',...
    'Units','char','Position',[XDSP+36 H 7 1.5],...
    'Callback','monline(''Main_Callback'',gcbo,''set-scanreco'',guidata(gcbo))',...
    'String',DEF.freco,'Tag','RecoNumEdt',...
    'HorizontalAlignment','left',...
    'TooltipString','Set reco number',...
    'FontWeight','Bold','FontName','FixedWidth');
% PVPAR button
uicontrol(...
    'Parent',hMain,'Style','PushButton',...
    'Units','char','Position',[XDSP+46 H 12 1.5],...
    'Callback','monline(''Main_Callback'',gcbo,''pvpar'',guidata(gcbo))',...
    'Tag','PvParBtn','String','PvPar',...
    'TooltipString','Show scan/reco parameters','FontWeight','bold',...
    'BackgroundColor',[0.5 0.8 0.5],'ForegroundColor',[0 0 0]);


% anatomy
XDSP = 1;  H = figH - 8.0;
uicontrol(...
    'Parent',hMain,'Style','Text',...
    'Units','char','Position',[XDSP H-0.3 30 1.5],...
    'String','Anat.','FontWeight','bold',...
    'HorizontalAlignment','left',...
    'Tag','AnatomyTxt',...
    'BackgroundColor',get(hMain,'Color'));
uicontrol(...
    'Parent',hMain,'Style','Text',...
    'Units','char','Position',[XDSP+9.5 H-0.3 30 1.5],...
    'String','Scan#:','FontWeight','bold',...
    'HorizontalAlignment','left',...
    'Tag','AnaScanNumTxt',...
    'BackgroundColor',get(hMain,'Color'));
uicontrol(...
    'Parent',hMain,'Style','Edit',...
    'Units','char','Position',[XDSP+18 H 9 1.5],...
    'Callback','monline(''Main_Callback'',gcbo,''set-scanreco'',guidata(gcbo))',...
    'String',DEF.ascan,'Tag','AnaScanNumEdt',...
    'HorizontalAlignment','left',...
    'TooltipString','Set ana scan number',...
    'FontWeight','Bold','FontName','FixedWidth');
uicontrol(...
    'Parent',hMain,'Style','Text',...
    'Units','char','Position',[XDSP+28 H-0.3 30 1.5],...
    'String','Reco#:','FontWeight','bold',...
    'HorizontalAlignment','left',...
    'Tag','AnaRecoNumTxt',...
    'BackgroundColor',get(hMain,'Color'));
uicontrol(...
    'Parent',hMain,'Style','Edit',...
    'Units','char','Position',[XDSP+36 H 7 1.5],...
    'Callback','monline(''Main_Callback'',gcbo,''set-scanreco'',guidata(gcbo))',...
    'String',DEF.areco,'Tag','AnaRecoNumEdt',...
    'HorizontalAlignment','left',...
    'TooltipString','Set anatomy reco number',...
    'FontWeight','Bold','FontName','FixedWidth');
uicontrol(...
    'Parent',hMain,'Style','Edit',...
    'Units','char','Position',[XDSP+46 H 12 1.5],...
    'Callback','monline(''Main_Callback'',gcbo,''set-scanreco'',guidata(gcbo))',...
    'String',DEF.aslice,'Tag','AnaSliceEdt',...
    'HorizontalAlignment','left',...
    'TooltipString','Select anatomy slices',...
    'FontWeight','Bold','FontName','FixedWidth');


XDSP = 1;  H = figH - 10.0;
uicontrol(...
    'Parent',hMain,'Style','Text',...
    'Units','char','Position',[XDSP H-0.3 30 1.5],...
    'String','Tripilot','FontWeight','bold',...
    'HorizontalAlignment','left',...
    'Tag','TripilotTxt',...
    'BackgroundColor',get(hMain,'Color'));
uicontrol(...
    'Parent',hMain,'Style','Text',...
    'Units','char','Position',[XDSP+9.5 H-0.3 30 1.5],...
    'String','Scan#:','FontWeight','bold',...
    'HorizontalAlignment','left',...
    'Tag','TriScanNumTxt',...
    'BackgroundColor',get(hMain,'Color'));
uicontrol(...
    'Parent',hMain,'Style','Edit',...
    'Units','char','Position',[XDSP+18 H 9 1.5],...
    'Callback','monline(''Main_Callback'',gcbo,''set-scanreco'',guidata(gcbo))',...
    'String',DEF.tscan,'Tag','TriScanNumEdt',...
    'HorizontalAlignment','left',...
    'TooltipString','Set ana scan number',...
    'FontWeight','Bold','FontName','FixedWidth');
uicontrol(...
    'Parent',hMain,'Style','Text',...
    'Units','char','Position',[XDSP+28 H-0.3 30 1.5],...
    'String','Reco#:','FontWeight','bold',...
    'HorizontalAlignment','left',...
    'Tag','TriRecoNumTxt',...
    'BackgroundColor',get(hMain,'Color'));
uicontrol(...
    'Parent',hMain,'Style','Edit',...
    'Units','char','Position',[XDSP+36 H 7 1.5],...
    'Callback','monline(''Main_Callback'',gcbo,''set-scanreco'',guidata(gcbo))',...
    'String',DEF.treco,'Tag','TriRecoNumEdt',...
    'HorizontalAlignment','left',...
    'TooltipString','Set anatomy reco number',...
    'FontWeight','Bold','FontName','FixedWidth');
uicontrol(...
    'Parent',hMain,'Style','PushButton',...
    'Units','char','Position',[XDSP+46 H 12 1.5],...
    'Callback','monline(''Main_Callback'',gcbo,''view-tripilot'',guidata(gcbo))',...
    'Tag','TriViewBtn','String','TriView','FontWeight','bold',...
    'TooltipString','Show tripilot',...
    'BackgroundColor',[0.5 0.8 0.8],'ForegroundColor',[0 0 0]);



XDSP = 1;  H = figH - 12.5;
% stimulus types/duration/repeats
uicontrol(...
    'Parent',hMain,'Style','Text',...
    'Units','char','Position',[XDSP H-0.3 30 1.5],...
    'String','Stimulus:','FontWeight','bold',...
    'HorizontalAlignment','left',...
    'Tag','StimTypeTxt',...
    'BackgroundColor',get(hMain,'Color'));
uicontrol(...
    'Parent',hMain,'Style','Edit',...
    'Units','char','Position',[XDSP+11 H 47 1.5],...
    'Callback','monline(''Main_Callback'',gcbo,''set-stimulus'',guidata(gcbo))',...
    'String',DEF.stmtypes,'Tag','StimTypeEdt',...
    'HorizontalAlignment','left',...
    'TooltipString','Set stimulus types',...
    'FontWeight','Bold','FontName','FixedWidth');
XDSP = 1;  H = figH - 14.5;
uicontrol(...
    'Parent',hMain,'Style','Text',...
    'Units','char','Position',[XDSP H-0.3 30 1.5],...
    'String','Volumes:','FontWeight','bold',...
    'HorizontalAlignment','left',...
    'Tag','StimDurTxt',...
    'BackgroundColor',get(hMain,'Color'));
uicontrol(...
    'Parent',hMain,'Style','Edit',...
    'Units','char','Position',[XDSP+11 H 47 1.5],...
    'Callback','monline(''Main_Callback'',gcbo,''set-stimulus'',guidata(gcbo))',...
    'String',DEF.stimtvol,'Tag','StimDurEdt',...
    'HorizontalAlignment','left',...
    'TooltipString','Set stimulus volumes',...
    'FontWeight','Bold','FontName','FixedWidth');
XDSP = 1;  H = figH - 16.5;
uicontrol(...
    'Parent',hMain,'Style','Text',...
    'Units','char','Position',[XDSP H-0.3 30 1.5],...
    'String','Repeats:','FontWeight','bold',...
    'HorizontalAlignment','left',...
    'Tag','StimRepTxt',...
    'BackgroundColor',get(hMain,'Color'));
uicontrol(...
    'Parent',hMain,'Style','Edit',...
    'Units','char','Position',[XDSP+11 H 10 1.5],...
    'Callback','monline(''Main_Callback'',gcbo,''set-stimulus'',guidata(gcbo))',...
    'String',DEF.stimrep,'Tag','StimRepEdt',...
    'HorizontalAlignment','left',...
    'TooltipString','Set stimulus repeats',...
    'FontWeight','Bold','FontName','FixedWidth');
uicontrol(...
    'Parent',hMain,'Style','Text',...
    'Units','char','Position',[XDSP+23 H-0.3 30 1.5],...
    'String','Trials4Avr:','FontWeight','bold',...
    'HorizontalAlignment','left',...
    'Tag','StimTrialTxt',...
    'BackgroundColor',get(hMain,'Color'));
uicontrol(...
    'Parent',hMain,'Style','Edit',...
    'Units','char','Position',[XDSP+36 H 22 1.5],...
    'Callback','monline(''Main_Callback'',gcbo,''set-stimulus'',guidata(gcbo))',...
    'String',DEF.stimtrial,'Tag','StimTrialEdt',...
    'HorizontalAlignment','left',...
    'TooltipString','Select trials for average',...
    'FontWeight','Bold','FontName','FixedWidth');


% ANALYSIS FLAGS
XDSP = 1;  H = figH - 19.0;
uicontrol(...
    'Parent',hMain,'Style','Checkbox',...
    'Units','char','Position',[XDSP H 20 1.5],...
    'Tag','ImgNormalizeCheck','Value',DEF.imgnormalize,...
    'Callback','monline(''Main_Callback'',gcbo,''set-anap'',guidata(gcbo))',...
    'String','ImgNormalize','FontWeight','bold',...
    'TooltipString','Normalize on/off','BackgroundColor',get(hMain,'Color'));
uicontrol(...
    'Parent',hMain,'Style','Checkbox',...
    'Units','char','Position',[XDSP+20 H 20 1.5],...
    'Tag','XYSmoothCheck','Value',DEF.xysmooth,...
    'Callback','monline(''Main_Callback'',gcbo,''set-anap'',guidata(gcbo))',...
    'String','XYSmooth','FontWeight','bold',...
    'TooltipString','XYSmooth on/off','BackgroundColor',get(hMain,'Color'));
uicontrol(...
    'Parent',hMain,'Style','Checkbox',...
    'Units','char','Position',[XDSP+40 H 20 1.5],...
    'Tag','CentroidCheck','Value',DEF.centroid,...
    'Callback','monline(''Main_Callback'',gcbo,''set-anap'',guidata(gcbo))',...
    'String','Centroid','FontWeight','bold',...
    'TooltipString','Centroid Check on/off','BackgroundColor',get(hMain,'Color'));
XDSP = 1;  H = figH - 21.0;
uicontrol(...
    'Parent',hMain,'Style','Checkbox',...
    'Units','char','Position',[XDSP H 20 1.5],...
    'Tag','DetrendCheck','Value',DEF.detrend,...
    'Callback','monline(''Main_Callback'',gcbo,''set-anap'',guidata(gcbo))',...
    'String','Detrend','FontWeight','bold',...
    'TooltipString','Detrend on/off','BackgroundColor',get(hMain,'Color'));
uicontrol(...
    'Parent',hMain,'Style','Checkbox',...
    'Units','char','Position',[XDSP+20 H 20 1.5],...
    'Tag','TFilterCheck','Value',DEF.tfilter,...
    'Callback','monline(''Main_Callback'',gcbo,''set-anap'',guidata(gcbo))',...
    'String','T-Filter (Hz)','FontWeight','bold',...
    'TooltipString','Temporal filter on/off','BackgroundColor',get(hMain,'Color'));
uicontrol(...
    'Parent',hMain,'Style','Edit',...
    'Units','char','Position',[XDSP+40 H 18 1.5],...
    'Callback','monline(''Main_Callback'',gcbo,''set-anap'',guidata(gcbo))',...
    'String','auto','Tag','TFilterEdt',...
    'HorizontalAlignment','left',...
    'TooltipString','Temporal filter as [hpHz lpHz]',...
    'FontWeight','Bold','FontName','FixedWidth');

XDSP = 1;  H = figH - 23.0;
idx = find(strcmpi({'none','sdu','percent'},DEF.xform));
if isempty(idx),  idx = 1;  end
uicontrol(...
    'Parent',hMain,'Style','Text',...
    'Units','char','Position',[XDSP H-0.3 30 1.5],...
    'String','Normalize:','FontWeight','bold',...
    'HorizontalAlignment','left',...
    'Tag','TcNormalizeTxt',...
    'BackgroundColor',get(hMain,'Color'));
uicontrol(...
    'Parent',hMain,'Style','Popupmenu',...
    'Units','char','Position',[XDSP+14 H 18 1.5],...
    'Callback','monline(''Main_Callback'',gcbo,''set-anap'',guidata(gcbo))',...
    'String',{'none','sdu','percent'},'Value',idx,'Tag','TcNormalizeCmb',...
    'HorizontalAlignment','left',...
    'TooltipString','Normalize time courses',...
    'FontWeight','Bold','FontName','FixedWidth');
uicontrol(...
    'Parent',hMain,'Style','Checkbox',...
    'Units','char','Position',[XDSP+40 H 20 1.5],...
    'Tag','AverageCheck','Value',DEF.average,...
    'Callback','monline(''Main_Callback'',gcbo,''set-anap'',guidata(gcbo))',...
    'String','Trial-Average','FontWeight','bold',...
    'TooltipString','Average trials on/off','BackgroundColor',get(hMain,'Color'));



XDSP = 1;  H = figH - 25.5;
uicontrol(...
    'Parent',hMain,'Style','Text',...
    'Units','char','Position',[XDSP H-0.3 30 1.5],...
    'String','Statistics:','FontWeight','bold',...
    'HorizontalAlignment','left',...
    'Tag','StatisticsTxt',...
    'BackgroundColor',get(hMain,'Color'));
uicontrol(...
    'Parent',hMain,'Style','Checkbox',...
    'Units','char','Position',[XDSP+14 H 20 1.5],...
    'Tag','CorrCheck','Value',DEF.corrana,...
    'Callback','monline(''Main_Callback'',gcbo,''set-anap'',guidata(gcbo))',...
    'String','Corr.','FontWeight','bold',...
    'TooltipString','Correlation analysis on/off','BackgroundColor',get(hMain,'Color'));
uicontrol(...
    'Parent',hMain,'Style','Checkbox',...
    'Units','char','Position',[XDSP+28 H 20 1.5],...
    'Tag','GlmCheck','Value',DEF.glmana,...
    'Callback','monline(''Main_Callback'',gcbo,''set-anap'',guidata(gcbo))',...
    'String','GLM','FontWeight','bold',...
    'TooltipString','Generalized linear model regression','BackgroundColor',get(hMain,'Color'));
uicontrol(...
    'Parent',hMain,'Style','Checkbox',...
    'Units','char','Position',[XDSP+42 H 20 1.5],...
    'Tag','TTestCheck','Value',DEF.ttest,...
    'Callback','monline(''Main_Callback'',gcbo,''set-anap'',guidata(gcbo))',...
    'String','T-test','FontWeight','bold',...
    'TooltipString','T-test on/off','BackgroundColor',get(hMain,'Color'));
XDSP = 1;  H = figH - 27.5;
uicontrol(...
    'Parent',hMain,'Style','Checkbox',...
    'Units','char','Position',[XDSP+14 H 20 1.5],...
    'Tag','EpiAnaCheck','Value',DEF.epiana,...
    'Callback','monline(''Main_Callback'',gcbo,''set-scanreco'',guidata(gcbo))',...
    'String','EpiAna','FontWeight','bold',...
    'TooltipString','use epi as anatomy','BackgroundColor',get(hMain,'Color'));
uicontrol(...
    'Parent',hMain,'Style','Text',...
    'Units','char','Position',[XDSP+27 H-0.3 20 1.5],...
    'String','Model-HRF:','FontWeight','bold',...
    'HorizontalAlignment','left',...
    'Tag','ApplyHRFTxt',...
    'BackgroundColor',get(hMain,'Color'));
hrfopt = {'none' 'vfhemo' 'fhemo','hemo','Cohen'};
idx = find(strcmpi(hrfopt,DEF.apply_hrf));
uicontrol(...
    'Parent',hMain,'Style','Popupmenu',...
    'Units','char','Position',[XDSP+41 H 18 1.5],...
    'Callback','monline(''Main_Callback'',gcbo,''set-anap'',guidata(gcbo))',...
    'String',hrfopt,'Value',idx,'Tag','ApplyHRFCmb',...
    'HorizontalAlignment','left',...
    'TooltipString','Apply HRF',...
    'FontWeight','Bold','FontName','FixedWidth');





XDSP = 1;  H = 0.5;
% RUN button
uicontrol(...
    'Parent',hMain,'Style','PushButton',...
    'Units','char','Position',[XDSP H 45 1.5],...
    'Callback','monline(''Main_Callback'',gcbo,''run'',guidata(gcbo))',...
    'Tag','RunBtn','String','Run Analysis',...
    'TooltipString','Run Analysis','FontWeight','bold',...
    'BackgroundColor',[0.8 0.8 0],'ForegroundColor',[0 0 1.0]);
% VIEW button
uicontrol(...
    'Parent',hMain,'Style','PushButton',...
    'Units','char','Position',[XDSP+45 H 13 1.5],...
    'Callback','monline(''Main_Callback'',gcbo,''view'',guidata(gcbo))',...
    'Tag','ViewBtn','String','View',...
    'TooltipString','View already processed result','FontWeight','bold',...
    'BackgroundColor',[0.5 0.8 0.8],'ForegroundColor',[0 0 0]);




% get widgets handles at this moment
HANDLES = findobj(hMain);
setappdata(hMain,'APPDATA',[]);
Main_Callback(hMain,'init',[]);


% NOW SET "UNITS" OF ALL WIDGETS AS "NORMALIZED".
HANDLES = HANDLES(HANDLES ~= hMain);
set(HANDLES,'units','normalized');

H_MONLINE = hMain;

if nargout,
  varargout{1} = hMain;
end
  

return;




%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function Main_Callback(hObject,eventdata,handles)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
wgts = guihandles(hObject);
APPDATA = getappdata(wgts.main,'APPDATA');

%eventdata

switch lower(eventdata),
 case {'init'}
  Main_Callback(wgts.DataDirEdt,'set-scanreco',[]);
  Main_Callback(wgts.DataDirEdt,'set-stimulus',[]);
  Main_Callback(wgts.DataDirEdt,'set-anap',[]);

 case {'set-scanreco'}
  datadir = get(wgts.DataDirEdt,'String');
  study   = get(wgts.StudyEdt,'String');
  fscan   = get(wgts.ScanNumEdt,'String');
  freco   = get(wgts.RecoNumEdt,'String');
  ascan   = get(wgts.AnaScanNumEdt,'String');
  areco   = get(wgts.AnaRecoNumEdt,'String');
  aslice  = get(wgts.AnaSliceEdt,'String');
  tscan   = get(wgts.TriScanNumEdt,'String');
  treco   = get(wgts.TriRecoNumEdt,'String');

  sesdir  = fullfile(datadir,study);
  tmpv = str2num(fscan);
  if length(tmpv) == 1,
    imgfile = fullfile(sesdir,num2str(tmpv),'pdata',freco,'2dseq');
  else
    imgfile = {};
    for N = 1:length(tmpv),
      imgfile{N} = fullfile(sesdir,num2str(tmpv(N)),'pdata',freco,'2dseq');
    end
  end
  APPDATA.imgfile  = imgfile;
  APPDATA.anafile  = fullfile(sesdir,ascan,'pdata',areco,'2dseq');
  APPDATA.anaslice = eval(aslice);
  APPDATA.trifile  = fullfile(sesdir,tscan,'pdata',treco,'2dseq');

  APPDATA.epiana   = get(wgts.EpiAnaCheck,'Value');
  setappdata(wgts.main,'APPDATA',APPDATA);
  
 case {'set-stimulus'}
  r = get(wgts.StimTypeEdt,'String');
  stim.stmtypes = {};
  while 1,
    [tmpstr, r] = strtok(r);
    if isempty(tmpstr),  break;  end
    stim.stmtypes{end+1} = tmpstr;
  end
  stim.tvol  = str2num(get(wgts.StimDurEdt,'String'));
  stim.rep   = str2num(get(wgts.StimRepEdt,'String'));
  stim.trial = str2num(get(wgts.StimTrialEdt,'String'));
  stim.trial = stim.trial(stim.trial > 0 & stim.trial <= stim.rep);
  
  APPDATA.stim = stim;
  setappdata(wgts.main,'APPDATA',APPDATA);
  
 case {'set-anap'}
  APPDATA.anap.imgnormalize = get(wgts.ImgNormalizeCheck,'Value');
  APPDATA.anap.xysmooth  = get(wgts.XYSmoothCheck,'Value');
  APPDATA.anap.centroid  = get(wgts.CentroidCheck,'Value');
  APPDATA.anap.detrend   = get(wgts.DetrendCheck,'Value');
  if get(wgts.TFilterCheck,'Value'),
    tmpstr = get(wgts.TFilterEdt,'String');
    tmpval = str2num(tmpstr);
    if any(tmpval)
      if length(tmpval) < 2,
        warndlg('T-Filter must be [hpHz lpHz].',mfilename,'modal');        
      end
      APPDATA.anap.tfilter = tmpval;
    else
      APPDATA.anap.tfilter = 'auto';
    end
  else
    APPDATA.anap.tfilter = [];
  end
  tmpidx = get(wgts.TcNormalizeCmb,'Value');
  if length(tmpidx) > 1,
    tmpidx = find(tmpidx);  tmpidx = tmpidx(1);
  end
  APPDATA.anap.xform     = get(wgts.TcNormalizeCmb,'String');
  APPDATA.anap.xform     = APPDATA.anap.xform{tmpidx};
  APPDATA.anap.average   = get(wgts.AverageCheck,'Value');
  %APPDATA.anap.apply_hrf = get(wgts.ApplyHRFCheck,'Value');
  tmpvals = get(wgts.ApplyHRFCmb,'String');
  APPDATA.anap.apply_hrf = tmpvals{get(wgts.ApplyHRFCmb,'Value')};
  APPDATA.anap.corrana   = get(wgts.CorrCheck,'Value');
  APPDATA.anap.glmana    = get(wgts.GlmCheck,'Value');
  APPDATA.anap.ttest     = get(wgts.TTestCheck,'Value');
  setappdata(wgts.main,'APPDATA',APPDATA);
  
 case {'run','run-analysis'}
  if ~isempty(APPDATA),
    clear monlineproc monlineview;
    SIG = monlineproc(APPDATA.imgfile,APPDATA.stim,APPDATA.anap,...
                      APPDATA.anafile,APPDATA.anaslice,APPDATA.trifile);
    if ~isempty(SIG),
      try
        monlineview(SIG);
      catch
      end
      %if APPDATA.anap.corrana > 0,
      %  monlinetmp(SIG,0.01,'corr');
      %end
      %if APPDATA.anap.ttest > 0,
      %  monlinetmp(SIG,0.01,'ttest');
      %end
      assignin('base','SIG',SIG);
    end
  end
  
 case {'view'}
  clear monineproc monlineview;
  try
    SIG = evalin('base','SIG');
  catch
    SIG = [];
  end
  if isempty(SIG),
    Main_Callback(hObject,'run',[])
  else
    monlineview(SIG);
  end
  
 case {'pvpar'}
  clear monlineproc monlinepvpar;
  if ~isempty(APPDATA),
    SIG = monlineproc(APPDATA.imgfile,APPDATA.stim,APPDATA.anap,...
                      APPDATA.anafile,APPDATA.anaslice,APPDATA.trifile,'pvparonly',1);
    %monlinepvpar(SIG,'hfig',gcf+100);
    monlinepvpar(SIG);
    clear SIG;
  end
  
 case {'view-tripilot'}
  clear monlinetripilot;
  if isobject(wgts.main),
    hmain = wgts.main.Number;
  else
    hmain = wgts.main;
  end
  if ischar(APPDATA.imgfile),
    monlinetripilot(APPDATA.trifile,APPDATA.imgfile,'hfig',hmain+100);
  else
    monlinetripilot(APPDATA.trifile,APPDATA.imgfile{1},'hfig',hmain+100);
  end

 otherwise
  fprintf('WARNING %s: Main_Callback() ''%s'' not supported yet.\n',mfilename,eventdata);
end
  
return;

  
  
  

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% FUNCTION to get screen size
function [scrW, scrH] = subGetScreenSize(Units)
oldUnits = get(0,'Units');
set(0,'Units',Units);
sz = get(0,'ScreenSize');
set(0,'Units',oldUnits);

scrW = sz(3);  scrH = sz(4);

return;
